# Copyright (c) 2020 Arm Limited. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the License); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: sh
os: linux
dist: xenial

env:
  global:
    - deps_url="https://mbed-os-ci.s3-eu-west-1.amazonaws.com/jenkins-ci/deps"
    - deps_dir="${HOME}/.cache/deps"
    - PROFILE=develop

cache:
  pip: true
  ccache: true
  directories:
    # Cache arm-none-eabi compiler
    - ${HOME}/.cache/deps
    # It looks like ccache for arm-none-eabi is not yet supported by Travis.
    # Therefore manually adding ccache directory to cache
    - ${HOME}/.ccache

before_install:
  - source travis-ci/functions.sh

addons:
  apt:
    sources:
      - sourceline: 'deb https://apt.kitware.com/ubuntu/ xenial main'
        key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
    packages:
      - cmake
      - ninja-build

matrix:
  include:
    - &mbed-tools-test
      stage: "Mbed-Tools"
      name: "Test blinky example - develop (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=K64F PROFILE=develop CACHE_NAME=develop-K64F
      language: python
      python: 3.9
      install:
        - _setup_build_env
        # Install the changes added in the pull request
        - pip install .
        - mbedtools --version
        # Leave mbed-tools directory to clone dependencies
        - cd ..
      script:
          # We use manual clone, with depth and single branch = the fastest
        - git clone --depth=1 --single-branch --branch development https://github.com/ARMmbed/${EXAMPLE_NAME}.git
        - |
          if [ -z ${SUBEXAMPLE_NAME} ]; then
              cd ${EXAMPLE_NAME}
          else
              cd ${EXAMPLE_NAME}/${SUBEXAMPLE_NAME}
          fi
        - mbedtools -vvv deploy
        - echo mbedtools compile -t GCC_ARM -m ${TARGET_NAME} -b ${PROFILE}
        - mbedtools -vvv compile -t GCC_ARM -m ${TARGET_NAME} -b ${PROFILE}
        - ccache -s

    - <<: *mbed-tools-test
      name: "Test blinky example - release (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=K64F PROFILE=release CACHE_NAME=release-K64F

    - <<: *mbed-tools-test
      name: "Test blinky example - debug (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=K64F PROFILE=debug CACHE_NAME=debug-K64F

    - <<: *mbed-tools-test
      name: "Test blinky example - develop (DISCO_L475VG_IOT01A)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=DISCO_L475VG_IOT01A PROFILE=develop CACHE_NAME=develop-DISCO_L475VG_IOT01A

    - <<: *mbed-tools-test
      name: "Test blinky example - release (DISCO_L475VG_IOT01A)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=DISCO_L475VG_IOT01A PROFILE=release CACHE_NAME=release-DISCO_L475VG_IOT01A

    - <<: *mbed-tools-test
      name: "Test blinky example - debug (DISCO_L475VG_IOT01A)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=DISCO_L475VG_IOT01A PROFILE=debug CACHE_NAME=debug-DISCO_L475VG_IOT01A

    - <<: *mbed-tools-test
      name: "Test blinky example - develop (NRF52840_DK)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=NRF52840_DK PROFILE=develop CACHE_NAME=develop-NRF52840_DK

    - <<: *mbed-tools-test
      name: "Test blinky example - release (NRF52840_DK)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=NRF52840_DK PROFILE=release CACHE_NAME=release-NRF52840_DK

    - <<: *mbed-tools-test
      name: "Test blinky example - debug (NRF52840_DK)"
      env: EXAMPLE_NAME=mbed-os-example-blinky TARGET_NAME=NRF52840_DK PROFILE=debug CACHE_NAME=debug-NRF52840_DK

    - <<: *mbed-tools-test
      name: "Test kvstore example (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-kvstore TARGET_NAME=K64F CACHE_NAME=kvstore-K64F

    - <<: *mbed-tools-test
      name: "Test ble example (NRF52840_DK)"
      env: EXAMPLE_NAME=mbed-os-example-ble TARGET_NAME=NRF52840_DK SUBEXAMPLE_NAME=BLE_Advertising CACHE_NAME=ble-ble-led-NRF52840_DK

    - <<: *mbed-tools-test
      name: "Test cellular example (WIO_3G)"
      env: EXAMPLE_NAME=mbed-os-example-cellular TARGET_NAME=WIO_3G CACHE_NAME=cellular-WIO_3G

    - <<: *mbed-tools-test
      name: "Test devicekey example (K66F)"
      env: EXAMPLE_NAME=mbed-os-example-devicekey TARGET_NAME=K66F CACHE_NAME=devicekey-K66F

    - <<: *mbed-tools-test
      name: "Test lorawan example (DISCO_L072CZ_LRWAN1)"
      env: EXAMPLE_NAME=mbed-os-example-lorawan TARGET_NAME=DISCO_L072CZ_LRWAN1 CACHE_NAME=lorawan-DISCO_L072CZ_LRWAN1

    - <<: *mbed-tools-test
      name: "Test crypto example (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-mbed-crypto TARGET_NAME=K64F SUBEXAMPLE_NAME=getting-started CACHE_NAME=crypto-getting-started-K64F

    - <<: *mbed-tools-test
      name: "Test nfc example (DISCO_L475VG_IOT01A)"
      env: EXAMPLE_NAME=mbed-os-example-nfc TARGET_NAME=DISCO_L475VG_IOT01A SUBEXAMPLE_NAME=NFC_EEPROM CACHE_NAME=nfc-DISCO_L475VG_IOT01A

    - <<: *mbed-tools-test
      name: "Test sockets example (K64F)"
      env: EXAMPLE_NAME=mbed-os-example-sockets TARGET_NAME=K64F CACHE_NAME=sockets-K64F

    # Mbed tools command line option test
    - <<: *mbed-tools-test
      name: "Test new command"
      env: NAME=test-new-cmd CACHE_NAME=test-new-cmd
      script:
        - mbedtools new test
        - cd test
        - mbedtools compile -t GCC_ARM -m K64F
        - ccache -s

    - <<: *mbed-tools-test
      name: "Test import command"
      env: NAME=test-import-cmd CACHE_NAME=test-import-cmd
      script:
        - mbedtools import mbed-os-example-ble
        - cd mbed-os-example-ble
        # Checkout the development branch on BLE example
        - git checkout development
        - cd BLE_Advertising
        - mbedtools deploy
        - mbedtools compile -t GCC_ARM -m K64F
        - ccache -s

    - <<: *mbed-tools-test
      name: "Test custom target"
      env: NAME=test-import-cmd CACHE_NAME=test-import-cmd
      script:
        - mbedtools new custom-target-test
        - cd custom-target-test
        - cp $TRAVIS_BUILD_DIR/travis-ci/test-data/custom_targets.json .
        - mkdir TARGET_IMAGINARYBOARD
        - cp $TRAVIS_BUILD_DIR/travis-ci/test-data/TARGET_IMAGINARYBOARD/* TARGET_IMAGINARYBOARD
        - cp mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L475xG/TARGET_DISCO_L475VG_IOT01A/P* TARGET_IMAGINARYBOARD
        - sed -i '/add_subdirectory(${MBED_PATH})/i add_subdirectory(TARGET_IMAGINARYBOARD)' CMakeLists.txt
        - mbedtools compile -t GCC_ARM -m IMAGINARYBOARD
        - ccache -s

    - <<: *mbed-tools-test
      name: "Test deploy command checks out tip of default branch"
      env: NAME=test-deploy-cmd CACHE_NAME=test-deploy-cmd
      script:
        - mkdir deploy-test
        - cd deploy-test
        - echo "https://github.com/ARMmbed/mbed-os" > mbed-os.lib
        - git clone --branch=latest https://github.com/ARMmbed/mbed-os.git
        - mbedtools -vvv deploy
        - cd mbed-os
        - git branch --points-at origin/HEAD
        - git branch --points-at origin/HEAD | grep -q "\*" || (echo "Couldn't
          see current branch points at default branch" && false)
